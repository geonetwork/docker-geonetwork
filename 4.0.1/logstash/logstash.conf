input {
  beats {
    port => 5044
  }
}

filter {
  if [service][type] == "apache2" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => ["%{IPORHOST:[request][access][remote_ip]} - %{DATA:[request][access][user_name]} \[%{HTTPDATE:[request][access][time]}\] \"%{WORD:[request][access][method]} %{DATA:[request][access][url]} HTTP/%{NUMBER:[request][access][http_version]}\" %{NUMBER:[request][access][response_code]} %{NUMBER:[request][access][body_sent][bytes]}( \"%{DATA:[request][access][referrer]}\")?( \"%{DATA:[request][access][agent]}\")?",
          "%{IPORHOST:[request][access][remote_ip]} - %{DATA:[request][access][user_name]} \\[%{HTTPDATE:[request][access][time]}\\] \"-\" %{NUMBER:[request][access][response_code]} -" ] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[request][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[request][access][time]"
      }
      useragent {
        source => "[request][access][agent]"
        target => "[request][access][user_agent]"
        remove_field => "[request][access][agent]"
      }
      geoip {
        source => "[request][access][remote_ip]"
        target => "[request][access][geoip]"
      }
    }
    else if [fileset][name] == "error" {
      grok {
        match => { "message" => ["\[%{APACHE_TIME:[request][error][timestamp]}\] \[%{LOGLEVEL:[request][error][level]}\]( \[client %{IPORHOST:[request][error][client]}\])? %{GREEDYDATA:[request][error][message]}",
          "\[%{APACHE_TIME:[request][error][timestamp]}\] \[%{DATA:[request][error][module]}:%{LOGLEVEL:[request][error][level]}\] \[pid %{NUMBER:[request][error][pid]}(:tid %{NUMBER:[request][error][tid]})?\]( \[client %{IPORHOST:[request][error][client]}\])? %{GREEDYDATA:[request][error][message1]}" ] }
        pattern_definitions => {
          "APACHE_TIME" => "%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}"
        }
        remove_field => "message"
      }
      mutate {
        rename => { "[request][error][message1]" => "[request][error][message]" }
      }
      date {
        match => [ "[request][error][timestamp]", "EEE MMM dd H:m:s YYYY", "EEE MMM dd H:m:s.SSSSSS YYYY" ]
        remove_field => "[request][error][timestamp]"
      }
    }
  } else if [service][type] == "nginx" {
     if [fileset][name] == "access" {
       grok {
         match => { "message" => ["%{IPORHOST:[request][access][remote_ip]} - %{DATA:[request][access][user_name]} \[%{HTTPDATE:[request][access][time]}\] \"%{WORD:[request][access][method]} %{DATA:[request][access][url]} HTTP/%{NUMBER:[request][access][http_version]}\" %{NUMBER:[request][access][response_code]} %{NUMBER:[request][access][body_sent][bytes]} \"%{DATA:[request][access][referrer]}\" \"%{DATA:[request][access][agent]}\""] }
         remove_field => "message"
       }
       mutate {
         add_field => { "read_timestamp" => "%{@timestamp}" }
       }
       date {
         match => [ "[request][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
         remove_field => "[request][access][time]"
       }
       useragent {
         source => "[request][access][agent]"
         target => "[request][access][user_agent]"
         remove_field => "[request][access][agent]"
       }
       geoip {
         source => "[request][access][remote_ip]"
         target => "[request][access][geoip]"
       }
     }
     else if [fileset][name] == "error" {
       grok {
         match => { "message" => ["%{DATA:[request][error][time]} \[%{DATA:[request][error][level]}\] %{NUMBER:[request][error][pid]}#%{NUMBER:[request][error][tid]}: (\*%{NUMBER:[request][error][connection_id]} )?%{GREEDYDATA:[request][error][message]}"] }
         remove_field => "message"
       }
       mutate {
         rename => { "@timestamp" => "read_timestamp" }
       }
       date {
         match => [ "[request][error][time]", "YYYY/MM/dd H:m:s" ]
         remove_field => "[request][error][time]"
       }
     }
   } else {
     mutate {
        rename => { "@timestamp" => "read_timestamp" }
      }
   }
}

output {
   elasticsearch {
     hosts => ["http://elasticsearch:9200"]
     index => "gn-webstats-%{+YYYY.MM}"
   }
   stdout { codec => rubydebug }
}
